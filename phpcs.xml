<?xml version="1.0"?>
<ruleset name="AJF-Coding-Standards">
    <description>A custom ruleset to take in account both WordPress and personal standards.</description>

    <!-- Show progress and sniff codes in all reports -->
    <arg value="ps"/>

    <!-- Exclude these -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>

    <rule ref="WordPress-Core">
        <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
    </rule>
    <rule ref="WordPress">
        <!-- <exclude name="WordPress.Files.FileName" /> -->
        <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
        <exclude name="WordPress.NamingConventions.ValidVariableName" />
        <exclude name="WordPress.WP.I18n.NonSingularStringLiteralText" />
        <exclude name="WordPress.PHP.NoSilencedErrors.Discouraged" />
        <exclude name="WordPress.PHP.DisallowShortTernary.Found" />
    </rule>

    <!-- Enforce space before closing parenthesis -->
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose">
        <severity>5</severity>
    </rule>

    <rule ref="Squiz.PHP.CommentedOutCode">
        <exclude name="Squiz.PHP.CommentedOutCode.Found"/>
    </rule>

    <!-- Use short arrays -->
    <rule ref="Generic.Arrays">
        <exclude name="Generic.Arrays.DisallowShortArraySyntax.Found"/>
    </rule>

    <!-- Use parse_url(), file_get_contents(), json_encode() -->
    <rule ref="WordPress.WP">
        <exclude name="WordPress.WP.AlternativeFunctions.parse_url_parse_url"/>
        <exclude name="WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents"/>
        <exclude name="WordPress.WP.AlternativeFunctions.json_encode_json_encode"/>
    </rule>
</ruleset>
